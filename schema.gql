# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: String!

  """User firstName """
  userName: String!

  """User firstName """
  password: String!

  """User gender """
  gender: String!

  """How much point user earn in total """
  score: Float!
}

type CreateUserOutput {
  """Result message """
  msg: String!

  """ID of user that have been created """
  userId: String!

  """User Name of user that have been created """
  userName: String!

  """User Gender of user that have been created """
  gender: String!

  """How much point user earn in total """
  score: Float!
}

type Album {
  _id: String!

  """Album ID - ID that comes from iTunes Provider"""
  albumID: String!

  """Title/Name of Album"""
  title: String!

  """Artist Name"""
  artist: String!

  """Artist ID - comes from iTunes provider"""
  artistID: String!

  """URL of album's cover image"""
  cover: String!
}

type Round {
  _id: String!

  """Indicates is round completed"""
  isCompleted: Boolean!

  """Is answer correct or not """
  isCorrect: Boolean

  """Album that asked in current round """
  requestedAlbum: Album!

  """Albums that proposed for user choice"""
  albums: [Album!]!
}

type Game {
  _id: String!

  """User who initiate this Game"""
  user: String!

  """Indicates if game was completed"""
  isCompleted: Boolean!

  """User current stage"""
  currentRound: String!

  """List of rounds in Game"""
  rounds: [Round!]!
}

type Query {
  user(id: String!): User!
  games: [Game!]!
  currentGame(user: String!): Game!
  albums: [Album!]!
  album(id: Int!): Album!
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserOutput!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createGame(createGameInput: CreateGameInput!): Boolean!
  updateGame(updateGameInput: UpdateGameInput!): Boolean!
  createAlbum: Boolean!
}

input CreateUserInput {
  """User userName """
  userName: String!

  """User Password """
  password: String!

  """User Gender """
  gender: String!

  """How much point user earn in total """
  score: Float
}

input UpdateUserInput {
  """User userName """
  userName: String

  """User Password """
  password: String

  """User Gender """
  gender: String

  """How much point user earn in total """
  score: Float
  id: Int!
}

input CreateGameInput {
  """User who initiate this Game"""
  user: String!
}

input UpdateGameInput {
  """User who initiate this Game"""
  user: String
  _id: String!

  """Indicates if game was completed"""
  isCompleted: Boolean!

  """User current stage"""
  currentRound: String
  round: RoundInput!
}

input RoundInput {
  _id: String!

  """Indicates is round completed"""
  isCompleted: Boolean!

  """Is answer correct or not """
  isCorrect: Boolean!

  """Album that asked in current round """
  requestedAlbum: CreateAlbumInput

  """Albums that proposed for user choice"""
  albums: [CreateAlbumInput!]
}

input CreateAlbumInput {
  """Album ID - ID that comes from iTunes Provider"""
  albumID: String!

  """Title/Name of Album"""
  title: String!

  """Artist Name"""
  artist: String!

  """Artist ID - comes from iTunes provider"""
  artistID: String!

  """URL of album's cover image"""
  cover: String!
}